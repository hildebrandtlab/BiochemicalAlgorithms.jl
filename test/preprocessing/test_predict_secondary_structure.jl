

@testitem "predict secondary structure" begin
    for T in [Float32, Float64]

        function test_secondary_structure(ac::AbstractAtomContainer{T}) where T
            fdb = FragmentDB{T}()

            normalize_names!(ac, fdb)
            reconstruct_fragments!(ac, fdb)
            build_bonds!(ac, fdb)
            predict_hbonds!(ac, :KABSCH_SANDER)
            predict_secondary_structure!(ac)
        end

        sys_pdb_test2 = load_pdb(ball_data_path("../test/data/PDBFile_test2.pdb"), T)
        @test test_secondary_structure(sys_pdb_test2) == "--GGGG-----------EEEEEEETTTTEEEEEEE---------B--HHHHHHHH---"

        # the reference was generated by the C++ BALL version
        @test length(secondary_structures(sys_pdb_test2)) == 9
        
        # the following was additionally 'compared to' in the C++ version 
        #String PDB_summary = "CCGGGGSCCCCCSCCCCEEEEEEETTTTEEEEEEECSSSCCSSCBSSHHHHHHHHSCC";

        ### 5pti.pdb
        sys_5pti = load_pdb(ball_data_path("../test/data/5PTI.pdb"), T)

        # this file has multiple chains; the second one has no amino acids and thus should only have "-" entries
        @test test_secondary_structure(sys_5pti) == 
            "--GGGG-----------EEEEEEETTTTEEEEEEE---------B--HHHHHHHH---" * repeat("-", nfragments(chains(sys_5pti)[2]))
    end
end